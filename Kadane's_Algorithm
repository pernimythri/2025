Brute force - O(N^2)

import java.util.*;
class Main{
    
    int Kadanes(int[] arr,int n)
     {
        int sum = 0;
        int maxsum = Integer.MIN_VALUE;
       for(int i=0;i<n;i++)
       {
           sum=0;
           for(int j=i;j<n;j++)
           {
               sum+=arr[j];
               maxsum=Math.max(sum,maxsum);
           }
       }
    return maxsum;
    }
    
    public static void main(String args[])
    {
        Scanner sc=new Scanner(System.in);
        Main obj=new Main();
        int n=sc.nextInt();
        int[] arr=new int[n];
        for(int i=0;i<n;i++)
        {
            arr[i]=sc.nextInt();
        }
        System.out.print(obj.Kadanes(arr,n));
    }
}
---------------------------------------------------------------------------------------
Optimized - O(N)

import java.util.*;
class Main{
    
    int Kadanes(int[] arr,int n)
     {
        int sum = 0;
        int maxSum = Integer.MIN_VALUE;
        for (int i = 0; i < n; i++) {
            sum += arr[i];
            maxSum = Math.max(maxSum, sum);
            if (sum < 0) {
                sum = 0;
            }
    }
    return maxSum;
    }
    
    public static void main(String args[])
    {
        Scanner sc=new Scanner(System.in);
        Main obj=new Main();
        int n=sc.nextInt();
        int[] arr=new int[n];
        for(int i=0;i<n;i++)
        {
            arr[i]=sc.nextInt();
        }
        System.out.print(obj.Kadanes(arr,n));
    }
}

-------------------------------------------------------------------------------------------
