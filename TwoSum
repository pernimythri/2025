Brute Force Solution - O(N^2)

import java.util.*;
class Main{
    boolean TwoSum(int[] arr,int n,int target)
    {
         for(int i=0;i<n-1;i++)
        {
            for(int j=i+1;j<n;j++)
            {
                if(arr[i]+arr[j]==target)
                return true;
            }
        }
        return false;
    }    
    public static void main(String args[])
    {
        Main obj=new Main();
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int[] arr=new int[n];
        for(int i=0;i<n;i++)
        arr[i]=sc.nextInt();
        int target=sc.nextInt();
        if(obj.TwoSum(arr,n,target))
        System.out.println("true");
        else
        System.out.println("false");
    }
}
--------------------------------------------------------------------------
Optimal Solution - O(N) - If arrays is not sorted.

import java.util.*;
class Main{
    boolean TwoSum(int[] arr,int n,int target)
    {
         HashMap<Integer,Integer>map=new HashMap<>();
         for(int i=0;i<n;i++)
         {
             int j=target-arr[i];
             if(map.containsKey(j))
             {
                 return true;
             }
             map.put(arr[i],i);
         }
         return false;
    }    
    public static void main(String args[])
    {
        Main obj=new Main();
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int[] arr=new int[n];
        for(int i=0;i<n;i++)
        arr[i]=sc.nextInt();
        int target=sc.nextInt();
        if(obj.TwoSum(arr,n,target))
        System.out.println("true");
        else
        System.out.println("false");
    }
}
----------------------------------------------------------------------------
Optimal Solution  - O(N log N) - If arrays is sorted.
import java.util.*;
class Main{
    boolean TwoSum(int[] arr,int n,int target)
    {
        Arrays.sort(arr);
        int i=0,j=n-1;
        while(i<j)
        {
            if(arr[i]+arr[j]==target)
            return true;
            else if(arr[i]+arr[j]<target)
            i++;
            else
            j--;
        }
        return false;
    }    
    public static void main(String args[])
    {
        Main obj=new Main();
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int[] arr=new int[n];
        for(int i=0;i<n;i++)
        arr[i]=sc.nextInt();
        int target=sc.nextInt();
        if(obj.TwoSum(arr,n,target))
        System.out.println("true");
        else
        System.out.println("false");
    }
}
